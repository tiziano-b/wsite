{"ast":null,"code":"var _jsxFileName = \"/Users/tiziano/Documents/nodeJS/tb_reactportfolio/src/pages/projects/StockForecasting.js\";\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport imageApp from '../../assets/projects/forecasting_button.png';\nimport useStylesGlobal from '../../components/style/TextStyles.js';\nimport ColoredLine from '../../components/style/ColouredLine.js';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  Page: {\n    width: '80%',\n    margin: 'auto',\n    paddingBottom: '3em',\n    height: '100%',\n    [theme.breakpoints.down('xs')]: {\n      width: '95%'\n    }\n  }\n}));\n\nfunction StockForecasting(props) {\n  const classes = useStyles();\n  ;\n  return React.createElement(\"div\", {\n    className: classes.Page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: classes.TextTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Stock Price trend forecasting\"), React.createElement(\"p\", {\n    className: classes.Text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" Forecasts based on historical prices are studied applying Linear Regression, Polynomial Regression, and Neural Network Backpropagation aimed to identify Elliott wave and Fibonacci ratios. \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), \"People sentiment, as a factor of stock price fluctuation is studied analysing messages published on Twitter using a Na\\xEFve Bayes approach.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes.ImageLogo,\n    src: imageApp,\n    alt: \"screenshots\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(ColoredLine, {\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"...\"), React.createElement(\"p\", {\n    className: classes.Text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: classes.BackgroundHighlight1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Main Functionalities\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \"- daily automatic update of the data\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), \"- daily and intraday stock price data covered\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), \"- 6 forecasting algorithms implemented\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), \"- controller algorithm to identify the best algorithm to use for each stock\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), \"- detailed accuracy information of the forecasting algorithm executed\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"b\", {\n    className: classes.BackgroundHighlight1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Key Components used\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), \"- Flask microframework\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), \"- Python backend\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), \"- HTML/JS/CSS interface\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), \"- MySQL database\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \"- ALL forecasting algorithms inplemented from scratch\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \"- Docker solution\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n}\n\nexport default StockForecasting;","map":{"version":3,"sources":["/Users/tiziano/Documents/nodeJS/tb_reactportfolio/src/pages/projects/StockForecasting.js"],"names":["React","makeStyles","imageApp","useStylesGlobal","ColoredLine","useStyles","theme","root","flexGrow","Page","width","margin","paddingBottom","height","breakpoints","down","StockForecasting","props","classes","TextTitle","Text","ImageLogo","BackgroundHighlight1"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport imageApp from '../../assets/projects/forecasting_button.png'\nimport useStylesGlobal from '../../components/style/TextStyles.js'\nimport ColoredLine from '../../components/style/ColouredLine.js' \n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  Page: {\n    width: '80%',\n    margin: 'auto',\n    paddingBottom: '3em',\n    height: '100%',\n    [theme.breakpoints.down('xs')]: {\n      width: '95%',\n    },\n  },\n}));\nfunction StockForecasting(props) {\n  const classes = useStyles();\n;\n\n  return (\n    <div className={classes.Page}>\n      <h1 className={classes.TextTitle}>Stock Price trend forecasting</h1>\n      <p className={classes.Text}>\tForecasts based on historical prices are studied applying Linear Regression, Polynomial Regression, and Neural Network Backpropagation aimed to identify Elliott wave and Fibonacci ratios. <br/>\n      People sentiment, as a factor of stock price fluctuation is studied analysing messages published on Twitter using a Na√Øve Bayes approach.\n        <br /><br />\n      </p>\n      <div >\n        <img className={classes.ImageLogo} src={imageApp} alt=\"screenshots\"/>\n      </div>\n      <ColoredLine color='black' />\n      <div>...</div>\n      <p className={classes.Text}>\n        <b className={classes.BackgroundHighlight1}>Main Functionalities</b><br /><br/>\n        - daily automatic update of the data<br/>\n\t\t\t  - daily and intraday stock price data covered<br/>\n\t\t\t  - 6 forecasting algorithms implemented<br/>\n\t\t\t  - controller algorithm to identify the best algorithm to use for each stock<br/>\n\t\t\t  - detailed accuracy information of the forecasting algorithm executed<br/>\n        <br /><br />\n        <b className={classes.BackgroundHighlight1}>Key Components used</b><br/><br/>\n\t\t\t  - Flask microframework<br/>\n        - Python backend<br/>\n\t\t\t  - HTML/JS/CSS interface<br/>\n        - MySQL database<br/>\n\t\t\t  - ALL forecasting algorithms inplemented from scratch<br/>\n\t\t\t  - Docker solution<br/>\n      </p>\n    </div>\n  )\n}\n \nexport default StockForecasting;"]},"metadata":{},"sourceType":"module"}