{"ast":null,"code":"import _defineProperty from\"/Users/tiziano/Documents/nodeJS/tb_reactportfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React from\"react\";import{makeStyles}from'@material-ui/core/styles';import imageApp from'../../assets/projects/forecasting_button.png';import useStylesGlobal from'../style/TextStyles.js';import ColoredLine from'../style/ColouredLine.js';var useStyles=makeStyles(function(theme){return{Page:_defineProperty({width:'80%',margin:'auto',paddingBottom:'3em',height:'100%'},theme.breakpoints.down('xs'),{width:'95%'})};});function StockForecastingComponent(props){var classes=useStyles();var classesGlobal=useStylesGlobal();return React.createElement(\"div\",{className:classes.Page},React.createElement(\"h1\",{className:classesGlobal.TextTitle},\"Stock Price trend forecasting\"),React.createElement(\"p\",{className:classesGlobal.Text},\" Forecasts based on historical prices are studied applying Linear Regression, Polynomial Regression, and Neural Network Backpropagation aimed to identify Elliott wave and Fibonacci ratios. \",React.createElement(\"br\",null),\"People sentiment, as a factor of stock price fluctuation is studied analysing messages published on Twitter using a Na\\xEFve Bayes approach.\",React.createElement(\"br\",null),React.createElement(\"br\",null)),React.createElement(\"div\",null,React.createElement(\"img\",{className:classesGlobal.ImageLogo,src:imageApp,alt:\"screenshots\"})),React.createElement(ColoredLine,{color:\"black\"}),React.createElement(\"div\",null,\"...\"),React.createElement(\"p\",{className:classesGlobal.Text},React.createElement(\"b\",{className:classesGlobal.TextSubTitle},\"Main Functionalities\"),React.createElement(\"br\",null),React.createElement(\"br\",null),\"- daily automatic update of the data\",React.createElement(\"br\",null),\"- daily and intraday stock price data covered\",React.createElement(\"br\",null),\"- 6 ML forecasting algorithms implemented from scratch, including Neural Network and Natural Language Processing\",React.createElement(\"br\",null),\"- controller algorithm to identify the best algorithm to use for each stock\",React.createElement(\"br\",null),\"- detailed accuracy information of the forecasting algorithm executed\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",{className:classesGlobal.TextSubTitle},\"Key Components used\"),React.createElement(\"br\",null),React.createElement(\"br\",null),\"- Flask microframework\",React.createElement(\"br\",null),\"- Python backend\",React.createElement(\"br\",null),\"- HTML/JS/CSS interface\",React.createElement(\"br\",null),\"- MySQL database\",React.createElement(\"br\",null),\"- Docker\",React.createElement(\"br\",null)));}export default StockForecastingComponent;","map":{"version":3,"sources":["/Users/tiziano/Documents/nodeJS/tb_reactportfolio/src/components/projects/StockForecasting.js"],"names":["React","makeStyles","imageApp","useStylesGlobal","ColoredLine","useStyles","theme","Page","width","margin","paddingBottom","height","breakpoints","down","StockForecastingComponent","props","classes","classesGlobal","TextTitle","Text","ImageLogo","TextSubTitle"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,8CAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,wBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CAIA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,SAAAK,KAAK,QAAK,CACrCC,IAAI,kBACFC,KAAK,CAAE,KADL,CAEFC,MAAM,CAAE,MAFN,CAGFC,aAAa,CAAE,KAHb,CAIFC,MAAM,CAAE,MAJN,EAKDL,KAAK,CAACM,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CALC,CAK8B,CAC9BL,KAAK,CAAE,KADuB,CAL9B,CADiC,CAAL,EAAN,CAA5B,CAYA,QAASM,CAAAA,yBAAT,CAAmCC,KAAnC,CAA0C,CACxC,GAAMC,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CACA,GAAMY,CAAAA,aAAa,CAAGd,eAAe,EAArC,CAEA,MACE,4BAAK,SAAS,CAAEa,OAAO,CAACT,IAAxB,EACE,0BAAI,SAAS,CAAEU,aAAa,CAACC,SAA7B,kCADF,CAEE,yBAAG,SAAS,CAAED,aAAa,CAACE,IAA5B,kMAA+N,8BAA/N,gJAEE,8BAFF,CAEQ,8BAFR,CAFF,CAME,+BACE,2BAAK,SAAS,CAAEF,aAAa,CAACG,SAA9B,CAAyC,GAAG,CAAElB,QAA9C,CAAwD,GAAG,CAAC,aAA5D,EADF,CANF,CASE,oBAAC,WAAD,EAAa,KAAK,CAAC,OAAnB,EATF,CAUE,qCAVF,CAWE,yBAAG,SAAS,CAAEe,aAAa,CAACE,IAA5B,EACE,yBAAG,SAAS,CAAEF,aAAa,CAACI,YAA5B,yBADF,CACoE,8BADpE,CAC0E,8BAD1E,wCAEsC,8BAFtC,iDAG4C,8BAH5C,oHAI+G,8BAJ/G,+EAK0E,8BAL1E,yEAMoE,8BANpE,CAOE,8BAPF,CAOQ,8BAPR,CAQE,yBAAG,SAAS,CAAEJ,aAAa,CAACI,YAA5B,wBARF,CAQmE,8BARnE,CAQwE,8BARxE,0BASqB,8BATrB,oBAUkB,8BAVlB,2BAWsB,8BAXtB,oBAYkB,8BAZlB,YAaO,8BAbP,CAXF,CADF,CA6BD,CAED,cAAeP,CAAAA,yBAAf","sourcesContent":["import React from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport imageApp from '../../assets/projects/forecasting_button.png'\nimport useStylesGlobal from '../style/TextStyles.js'\nimport ColoredLine from '../style/ColouredLine.js' \n\n\n\nconst useStyles = makeStyles(theme => ({\n  Page: {\n    width: '80%',\n    margin: 'auto',\n    paddingBottom: '3em',\n    height: '100%',\n    [theme.breakpoints.down('xs')]: {\n      width: '95%',\n    },\n  },\n}));\n\nfunction StockForecastingComponent(props) {\n  const classes = useStyles();\n  const classesGlobal = useStylesGlobal();\n\n  return (\n    <div className={classes.Page}>\n      <h1 className={classesGlobal.TextTitle}>Stock Price trend forecasting</h1>\n      <p className={classesGlobal.Text}>\tForecasts based on historical prices are studied applying Linear Regression, Polynomial Regression, and Neural Network Backpropagation aimed to identify Elliott wave and Fibonacci ratios. <br/>\n      People sentiment, as a factor of stock price fluctuation is studied analysing messages published on Twitter using a Na√Øve Bayes approach.\n        <br /><br />\n      </p>\n      <div >\n        <img className={classesGlobal.ImageLogo} src={imageApp} alt=\"screenshots\"/>\n      </div>\n      <ColoredLine color='black' />\n      <div>...</div>\n      <p className={classesGlobal.Text}>\n        <b className={classesGlobal.TextSubTitle}>Main Functionalities</b><br /><br/>\n        - daily automatic update of the data<br/>\n\t\t\t  - daily and intraday stock price data covered<br/>\n\t\t\t  - 6 ML forecasting algorithms implemented from scratch, including Neural Network and Natural Language Processing<br/>\n\t\t\t  - controller algorithm to identify the best algorithm to use for each stock<br/>\n\t\t\t  - detailed accuracy information of the forecasting algorithm executed<br/>\n        <br /><br />\n        <b className={classesGlobal.TextSubTitle}>Key Components used</b><br/><br/>\n\t\t\t  - Flask microframework<br/>\n        - Python backend<br/>\n\t\t\t  - HTML/JS/CSS interface<br/>\n        - MySQL database<br/>\n\t\t\t  - Docker<br/>\n      </p>\n    </div>\n  )\n}\n \nexport default StockForecastingComponent;\n"]},"metadata":{},"sourceType":"module"}